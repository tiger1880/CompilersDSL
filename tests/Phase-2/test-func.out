LINE COMMENT: $ function definition
FUNC: func
VOID: void
IDENTIFIER: _ola9
PARENTHESIS: (
DATATYPE: int
IDENTIFIER: a
PUNCTUATION: ,
DATATYPE: line
IDENTIFIER: b
PUNCTUATION: ,
DATATYPE: regPoly
IDENTIFIER: p
PARENTHESIS: )
PARENTHESIS: {
DATATYPE: int
IDENTIFIER: a
EQUAL: :=
INTEGERS: 1
DATATYPE: int
IDENTIFIER: b
EQUAL: :=
INTEGERS: 10
WHILE: until
PARENTHESIS: (
IDENTIFIER: a
CMP_OP/BRACKET: <
IDENTIFIER: b
PARENTHESIS: )
PARENTHESIS: {
IDENTIFIER: a
ASSIGN_OP: +:=
PARENTHESIS: (
IDENTIFIER: b
OPERATORS: -
IDENTIFIER: a
PARENTHESIS: )
OPERATORS: /
INTEGERS: 2
PARENTHESIS: }
RETURN: return
PARENTHESIS: }
FUNC: func
DATATYPE: label
IDENTIFIER: fullName
PARENTHESIS: (
DATATYPE: label
IDENTIFIER: firstName
PUNCTUATION: ,
DATATYPE: label
IDENTIFIER: lastName
PARENTHESIS: )
PARENTHESIS: {
DATATYPE: label
IDENTIFIER: c
EQUAL: :=
IDENTIFIER: firstName
OPERATORS: +
STRING_LITERAL: " "
OPERATORS: +
IDENTIFIER: lastName
RETURN: return
IDENTIFIER: c
PARENTHESIS: }
LINE COMMENT: $ statements outside are also allowed
DATATYPE: int
IDENTIFIER: c
EQUAL: :=
INTEGERS: 10
IDENTIFIER: c
EQUAL: :=
IDENTIFIER: c
OPERATORS: *
INTEGERS: 10
FUNC: func
DATATYPE: real
IDENTIFIER: distOfIntersection
PARENTHESIS: (
DATATYPE: line
IDENTIFIER: l1
PUNCTUATION: ,
DATATYPE: line
IDENTIFIER: l2
PARENTHESIS: )
PARENTHESIS: {
IF: if
PARENTHESIS: (
IDENTIFIER: l1
PARALLEL: ||
IDENTIFIER: l2
PARENTHESIS: )
PARENTHESIS: {
RETURN: return
OPERATORS: -
INTEGERS: 1
PARENTHESIS: }
DATATYPE: point
IDENTIFIER: p
EQUAL: :=
IDENTIFIER: INTERSECTION
PARENTHESIS: (
IDENTIFIER: l1
PUNCTUATION: ,
IDENTIFIER: l2
PARENTHESIS: )
RETURN: return
PARALLEL: ||
IDENTIFIER: p
PARALLEL: ||
PARENTHESIS: }
