LINE COMMENT: $ Arithmetic
IDENTIFIER: a
EQUAL: :=
IDENTIFIER: a
OPERATORS: +
IDENTIFIER: a
MEMEBER ACCESS: .
IDENTIFIER: f
PARENTHESIS: (
PARENTHESIS: )
OPERATORS: *
FLOATS: 2.0
OPERATORS: ^
INTEGERS: 2
OPERATORS: -
INTEGERS: 9
OPERATORS: +
PARENTHESIS: (
INTEGERS: 1
OPERATORS: +
INTEGERS: 2
PARENTHESIS: )
OPERATORS: /
INTEGERS: 5
OPERATORS: +
IDENTIFIER: y
OPERATORS: %
INTEGERS: 2
IDENTIFIER: a
PARENTHESIS: [
IDENTIFIER: i
PARENTHESIS: ]
PARENTHESIS: [
IDENTIFIER: b
PARENTHESIS: [
IDENTIFIER: i
PARENTHESIS: ]
OPERATORS: +
INTEGERS: 1
PARENTHESIS: ]
EQUAL: :=
OPERATORS: -
IDENTIFIER: f
PARENTHESIS: (
PARENTHESIS: (
INTEGERS: 0
PUNCTUATION: ,
INTEGERS: 0
PARENTHESIS: )
PARENTHESIS: )
LINE COMMENT: $ Angles, Lines, Points
IDENTIFIER: a
EQUAL: :=
CMP_OP/BRACKET: <
IDENTIFIER: p
IDENTIFIER: q
IDENTIFIER: r
PUNCTUATION: ,
BOOLEAN: true
CMP_OP/BRACKET: >
IDENTIFIER: b
EQUAL: :=
CMP_OP/BRACKET: <
IDENTIFIER: d
IDENTIFIER: e
IDENTIFIER: f
CMP_OP/BRACKET: >
IDENTIFIER: a
EQUAL: :=
IDENTIFIER: p
OPERATORS: -
IDENTIFIER: q
LINE_OP: ->
IDENTIFIER: r
OPERATORS: -
IDENTIFIER: o
IDENTIFIER: a
EQUAL: :=
IDENTIFIER: l1
PARALLEL: ||
IDENTIFIER: l2
PARALLEL: ||
IDENTIFIER: l3
PERPENDICULAR: |-
IDENTIFIER: l2
PARALLEL: ||
IDENTIFIER: l3
PARALLEL: ||
IDENTIFIER: l4
IDENTIFIER: c
EQUAL: :=
PARALLEL: ||
PARENTHESIS: (
INTEGERS: 1
PUNCTUATION: ,
INTEGERS: 2
PARENTHESIS: )
OPERATORS: -
PARENTHESIS: (
INTEGERS: 0
PUNCTUATION: ,
INTEGERS: 2
PARENTHESIS: )
PARALLEL: ||
OPERATORS: +
PARENTHESIS: (
INTEGERS: 0
OPERATORS: +
INTEGERS: 1
PARENTHESIS: )
LINE COMMENT: $ Logical
INTEGERS: 1
LOGICAL_OP: and
PARENTHESIS: (
BOOLEAN: true
LOGICAL_OP: or
BOOLEAN: false
PARENTHESIS: )
LOGICAL_OP: and
STRING_LITERAL: "hello"
IDENTIFIER: a
EQUAL: :=
IDENTIFIER: a
LOGICAL_OP: or
IDENTIFIER: b
LINE COMMENT: $ Comparison
INTEGERS: 9
CMP_OP/BRACKET: <
IDENTIFIER: f
PARENTHESIS: (
PARENTHESIS: )
INTEGERS: 9
CMP_OP/BRACKET: >
OPERATORS: -
INTEGERS: 9
INTEGERS: 9
CMP_OP: >=
INTEGERS: 0
OPERATORS: +
INTEGERS: 1
INTEGERS: 9
CMP_OP: <=
INTEGERS: 0
INTEGERS: 9
EQ_CMP_OP: ==
FLOATS: .9
INTEGERS: 9
EQ_CMP_OP: !=
FLOATS: 9.
LINE COMMENT: $ Assignment - chaining is valid, Member Access, Arrays
IDENTIFIER: d
EQUAL: :=
IDENTIFIER: e
PARENTHESIS: [
INTEGERS: 1
PARENTHESIS: ]
PARENTHESIS: [
INTEGERS: 2
PARENTHESIS: ]
EQUAL: :=
INTEGERS: 1
OPERATORS: +
INTEGERS: 2
IDENTIFIER: d
MEMEBER ACCESS: .
IDENTIFIER: e
MEMEBER ACCESS: .
IDENTIFIER: f
PARENTHESIS: [
IDENTIFIER: i
PARENTHESIS: ]
MEMEBER ACCESS: .
IDENTIFIER: g
ASSIGN_OP: +:=
IDENTIFIER: f
ASSIGN_OP: -:=
IDENTIFIER: u
EQUAL: :=
OPERATORS: -
INTEGERS: 2
LINE COMMENT: $ Function calls, Only Constructor in a line
CONSTRUCTOR: Circle
PARENTHESIS: (
IDENTIFIER: p
PUNCTUATION: ,
IDENTIFIER: r
PARENTHESIS: )
CONSTRUCTOR: Tri
PARENTHESIS: (
IDENTIFIER: a
PUNCTUATION: ,
IDENTIFIER: b
PUNCTUATION: ,
IDENTIFIER: c
PARENTHESIS: )
IDENTIFIER: a
EQUAL: :=
IDENTIFIER: a
MEMEBER ACCESS: .
IDENTIFIER: f
PARENTHESIS: (
PARENTHESIS: )
OPERATORS: +
IDENTIFIER: f
PARENTHESIS: (
INTEGERS: 1
PUNCTUATION: ,
INTEGERS: 2
PUNCTUATION: ,
CONSTRUCTOR: Circle
PARENTHESIS: (
IDENTIFIER: p
PUNCTUATION: ,
IDENTIFIER: r
PARENTHESIS: )
PARENTHESIS: )
LINE COMMENT: $ All statement below are syntactically valid, though semantically may be wrong
OPERATORS: -
INTEGERS: 9
OPERATORS: -
INTEGERS: 9
OPERATORS: +
INTEGERS: 67
OPERATORS: ^
INTEGERS: 2
OPERATORS: +
INTEGERS: 10
OPERATORS: *
IDENTIFIER: q
MEMEBER ACCESS: .
IDENTIFIER: f
PARENTHESIS: (
PARENTHESIS: )
OPERATORS: /
INTEGERS: 2
OPERATORS: +
INTEGERS: 3
OPERATORS: %
IDENTIFIER: p
MEMEBER ACCESS: .
IDENTIFIER: c
PARENTHESIS: [
IDENTIFIER: i
PARENTHESIS: ]
MEMEBER ACCESS: .
IDENTIFIER: t
PARALLEL: ||
IDENTIFIER: p
OPERATORS: *
IDENTIFIER: q
MEMEBER ACCESS: .
IDENTIFIER: f
PARENTHESIS: [
IDENTIFIER: i
PARENTHESIS: ]
PARALLEL: ||
IDENTIFIER: l1
PERPENDICULAR: |-
BOOLEAN: true
IDENTIFIER: x
MEMEBER ACCESS: .
IDENTIFIER: x
MEMEBER ACCESS: .
IDENTIFIER: x
EQUAL: :=
INTEGERS: 1
UNARY: ++
OPERATORS: +
UNARY: ++
INTEGERS: 1
OPERATORS: +
PARALLEL: ||
IDENTIFIER: x
PARALLEL: ||
OPERATORS: +
NOT: not
PARENTHESIS: (
BOOLEAN: true
OPERATORS: +
FLOATS: 0.9
PARENTHESIS: )
OPERATORS: +
INTEGERS: 9
LINE_OP: ->
INTEGERS: 8
LINE_OP: <->
IDENTIFIER: p
OPERATORS: -
IDENTIFIER: q
LOGICAL_OP: or
BOOLEAN: true
LOGICAL_OP: and
BOOLEAN: false
IDENTIFIER: x
EQUAL: :=
PARENTHESIS: (
INTEGERS: 0
PUNCTUATION: ,
INTEGERS: 1
PARENTHESIS: )
OPERATORS: +
PARENTHESIS: (
INTEGERS: 1
PUNCTUATION: ,
INTEGERS: 2
PARENTHESIS: )
OPERATORS: +
CMP_OP/BRACKET: <
IDENTIFIER: a
IDENTIFIER: b
PARENTHESIS: (
INTEGERS: 0
PUNCTUATION: ,
INTEGERS: 0
PARENTHESIS: )
CMP_OP/BRACKET: >
OPERATORS: +
PARENTHESIS: (
INTEGERS: 0
OPERATORS: +
FLOATS: 0.00
PARENTHESIS: )
LOGICAL_OP: or
PARENTHESIS: (
INTEGERS: 0
PUNCTUATION: ,
INTEGERS: 1
PARENTHESIS: )
IDENTIFIER: function1
PARENTHESIS: (
STRING_LITERAL: "hello"
PUNCTUATION: ,
CONSTRUCTOR: Circle
PARENTHESIS: (
IDENTIFIER: p
PUNCTUATION: ,
IDENTIFIER: r
PARENTHESIS: )
PUNCTUATION: ,
INTEGERS: 1
OPERATORS: +
INTEGERS: 1
PARENTHESIS: )
IDENTIFIER: a
EQUAL: :=
IDENTIFIER: b
PARENTHESIS: [
STRING_LITERAL: "h"
PARENTHESIS: ]
PARENTHESIS: [
PARENTHESIS: (
INTEGERS: 0
PUNCTUATION: ,
INTEGERS: 0
PARENTHESIS: )
OPERATORS: *
FLOATS: .9
PARENTHESIS: ]
EQUAL: :=
INTEGERS: 9
IDENTIFIER: a
ASSIGN_OP: +:=
IDENTIFIER: c
ASSIGN_OP: +:=
INTEGERS: 9
OPERATORS: +
IDENTIFIER: c
MEMEBER ACCESS: .
IDENTIFIER: c
PARENTHESIS: [
IDENTIFIER: i
PARENTHESIS: ]
MEMEBER ACCESS: .
IDENTIFIER: h
PARENTHESIS: (
PARENTHESIS: )
PARENTHESIS: (
INTEGERS: 0
OPERATORS: +
PARENTHESIS: (
INTEGERS: 0
PUNCTUATION: ,
INTEGERS: 0
PUNCTUATION: ,
STRING_LITERAL: "A"
PARENTHESIS: )
PUNCTUATION: ,
FLOATS: 9.0
PARENTHESIS: )
OPERATORS: +
CMP_OP/BRACKET: <
IDENTIFIER: d
IDENTIFIER: e
IDENTIFIER: f
PUNCTUATION: ,
BOOLEAN: true
CMP_OP/BRACKET: >
