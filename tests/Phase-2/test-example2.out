LINE COMMENT: $ Usage of norm is shown below.
DATATYPE: point
IDENTIFIER: p
EQUAL: :=
PARENTHESIS: (
INTEGERS: 2
PUNCTUATION: ,
INTEGERS: 3
PARENTHESIS: )
PUNCTUATION: ,
IDENTIFIER: q
EQUAL: :=
PARENTHESIS: (
INTEGERS: 6
PUNCTUATION: ,
INTEGERS: 8
PARENTHESIS: )
PUNCTUATION: ,
IDENTIFIER: r
EQUAL: :=
PARENTHESIS: (
INTEGERS: 4
PUNCTUATION: ,
INTEGERS: 4
PARENTHESIS: )
FOR: repeat
PARENTHESIS: (
DATATYPE: int
IDENTIFIER: i
EQUAL: :=
PARALLEL: ||
IDENTIFIER: p
PARALLEL: ||
OPERATORS: +
PARALLEL: ||
IDENTIFIER: q
PARALLEL: ||
SEPERATOR: |
IDENTIFIER: i
CMP_OP/BRACKET: <
INTEGERS: 20
SEPERATOR: |
IDENTIFIER: i
UNARY: ++
PARENTHESIS: )
PARENTHESIS: {
IF: if
PARENTHESIS: (
IDENTIFIER: i
OPERATORS: %
INTEGERS: 2
EQ_CMP_OP: ==
INTEGERS: 0
LOGICAL_OP: and
PARENTHESIS: (
IDENTIFIER: i
CMP_OP/BRACKET: >
INTEGERS: 5
LOGICAL_OP: and
IDENTIFIER: i
CMP_OP/BRACKET: <
INTEGERS: 15
PARENTHESIS: )
PARENTHESIS: )
PARENTHESIS: {
IDENTIFIER: p
MEMEBER ACCESS: .
IDENTIFIER: x
SUM_ASSIGN_OP: +:=
INTEGERS: 4
PARENTHESIS: }
ELSE: else
PARENTHESIS: {
DATATYPE: int
IDENTIFIER: dist
EQUAL: :=
INTEGERS: 0
IDENTIFIER: dist
UNARY: ++
STOP: stop
PARENTHESIS: }
PARENTHESIS: }
FIG: fig
IDENTIFIER: figure_1
PARENTHESIS: (
INTEGERS: 1
PUNCTUATION: ,
PARENTHESIS: (
INTEGERS: 1
PUNCTUATION: ,
INTEGERS: 0
PARENTHESIS: )
PARENTHESIS: )
PARENTHESIS: {
DATATYPE: line
IDENTIFIER: l
PARENTHESIS: [
INTEGERS: 2
PARENTHESIS: ]
EQUAL: :=
IDENTIFIER: p
OPERATORS: -
IDENTIFIER: q
LINE_OP: <->
IDENTIFIER: r
DATATYPE: bool
IDENTIFIER: flag
EQUAL: :=
INTEGERS: 0
FOR: repeat
PARENTHESIS: (
DATATYPE: int
IDENTIFIER: i
EQUAL: :=
INTEGERS: 0
SEPERATOR: |
INTEGERS: 5
OPERATORS: -
INTEGERS: 1
SEPERATOR: |
IDENTIFIER: i
UNARY: ++
PARENTHESIS: )
PARENTHESIS: {
LINE COMMENT: $  To Check if all lines in an array are parallel or not
IF: if
PARENTHESIS: (
NOT: not
PARENTHESIS: (
IDENTIFIER: l
PARENTHESIS: [
IDENTIFIER: i
PARENTHESIS: ]
PARALLEL: ||
IDENTIFIER: l
PARENTHESIS: [
IDENTIFIER: i
OPERATORS: +
INTEGERS: 1
PARENTHESIS: ]
PARENTHESIS: )
PARENTHESIS: )
PARENTHESIS: {
IDENTIFIER: flag
EQUAL: :=
INTEGERS: 1
PARENTHESIS: }
PARENTHESIS: }
IF: if
PARENTHESIS: (
IDENTIFIER: flag
PARENTHESIS: )
PARENTHESIS: {
IDENTIFIER: flag
EQUAL: :=
INTEGERS: 0
PARENTHESIS: }
DATATYPE: circle
IDENTIFIER: c1
EQUAL: :=
CONSTRUCTOR: Circle
PARENTHESIS: (
FLOATS: 2.5
PUNCTUATION: ,
PARENTHESIS: (
INTEGERS: 2
PUNCTUATION: ,
INTEGERS: 3
PARENTHESIS: )
PARENTHESIS: )
DATATYPE: circle
IDENTIFIER: c2
EQUAL: :=
CONSTRUCTOR: Circle
PARENTHESIS: (
FLOATS: 3.6
PUNCTUATION: ,
PARENTHESIS: (
INTEGERS: 4
PUNCTUATION: ,
INTEGERS: 5
PARENTHESIS: )
PARENTHESIS: )
PARENTHESIS: }
IDENTIFIER: figure_1
PARENTHESIS: (
PARENTHESIS: )
