func real factorial(int n) {
    if (n <= 1) {
        return 1.0
    } 
    else {
        return n * factorial(n - 2)
    }
}

func real power(real base, int exponent) {
    real result := 1.0
    repeat (int i := 0| i < exponent| ++i) {
        result *:= base
    }
    return result
}

func real sinTaylorSeries(real x, int terms) {
    real result := 0.0
    repeat (int n := 0| n < terms| ++n) {
        result +:= (power(-1, n) / factorial(2 * n + 1)) * power(x, 2 * n + 1)
    }
    return result
}

func real cosTaylorSeries(real x, int terms) {
    real result := 0.0
    repeat (int n := 0| n < terms| ++n) {
        result +:= (power(-1, n) / factorial(2 * n)) * power(x, 2 * n)
    }
    return result
}


$ global variables
int R := 10
int n := 5
real pi := 3.14

repeat(int i := 0|i < 4|i++){

    Circle(i+1, (0, 0))
}

repeat(angle a := 0|a < 180|a+:=30){

    Circle(1, (5*cosTaylorSeries(a*pi/180, 10), 5*sinTaylorSeries(a*pi/180, 10)))
}










